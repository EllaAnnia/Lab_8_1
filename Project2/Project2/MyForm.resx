<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAA5CAYAAADZcPW3AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAS
        cQAAEnEB89x6jgAAGRxJREFUeF7t3QWQG0e3BeDkDzMzM4PDzMzMHIeZOU7iMCeOw8zM4DAzMzMzM8yr
        r6POa49H2l3Z3pXkOVUqe1ujmZ7ue8+FpsGyEiVKDLIoCaBEiUEYTU8AP//8c3bxxRdnF1xwQaWkRIkS
        7UXTEsBvv/2WnXrqqdkGG2yQ3XnnneHvEiVKdAxNSwDXXnttNtNMM2VffPFFpaREiRIdRVMSwO+//54t
        s8wy2QMPPFApaT++++677Iwzzshee+21Skn9EH688847lb8aF2+99VbpITUI/vnnn+zjjz/Ofvrpp0pJ
        16IpCeDdd9/NunXrFpS5o7j55puzMcYYI9tmm20qJfXhsccey/bbb7+m8EA++uijbI899siee+65SkmJ
        zgbFf+GFF7IVV1wxW2GFFbJFFlkk69mzZzAiXYmmJIAnnngim2OOOepi0T/++CP75JNP+ouB77vvvmy7
        7bZrKqv6448/ZmuttVb27LPPVkpKDEgg2YcffrjyV79AvuOOO25IWP/999/Zr7/+Gshgs802CzLZVWhK
        AnjwwQezeeaZJ/vll18qJZ2HV155JZtqqqmyZ555plLSPOjTp082zTTTNEXY0gxg1XmC2267bTb33HNn
        1113XeWbfiFZPdFEE2WfffZZpSTLzjvvvGz44YfP7r///kpJ56NpCWDeeeetSgA6Bsv6N/4/RbUyn/j/
        /PegbOONN85WXXXVwu8h/tYn3q8I8br2XhM//QNWh6Duuuuu/X2vQRXa7c8//8zefPPNYMFZ9eOPPz60
        bTV8+OGH2eijjx7yVqm15xX873//y7beeusu64+WIwANfOyxx2Zrrrlmtt5662X77rtvdu6554bvKNPj
        jz+e7bbbbsEVAwnFG264IXSCTmUdd9xxx6Dk5hb89ddf4TrA9qOMMkp29dVXV0r6Bje7V69e2UYbbZSt
        ttpq2VFHHZV9//33lW//H+4jB6GO3bt3z+65555+BOCll14KdXKNa3v06BFClyJ8/vnn2fXXX5999dVX
        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
</value>
  </data>
</root>